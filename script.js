// –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å ID
let nextID = 1

// –ø–æ–∫–∞–∑–Ω–∏–∫ –≤—ñ—Ä–∏ –≤ —Å–µ–±–µ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á–æ–∫)
let confidence = 50 

// –º–∞—Å–∏–≤ –æ–±—î–∫—Ç—ñ–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤–∏–¥—ñ–≤ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ
const activities = [
    {id: nextID++, name: '–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è', size: '2 –≥–æ–¥–∏–Ω–∏', diff: 2},
    {id: nextID++, name: '–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞', size: '2 –≥–æ–¥–∏–Ω–∏', diff: 5},
    {id: nextID++, name: '–§—ñ–∑–∫—É–ª—å—Ç—É—Ä–∞', size: '1 –≥–æ–¥–∏–Ω–∞', diff: 9},
]
//–º–∞—Å–∏–≤ –æ–±—î–∫—Ç—ñ–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–≤–µ—Å—Ç—ñ–≤
const quests = [
    {id: nextID++, activityID: 1, from: '2020-09-14', to: '2020-09-20',
    done: 2, total: 7, confidence: 14, status: 'ongoing'},
]
// –ø–ª–∞–Ω–∏ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–≤–µ—Å—Ç—É
const todos = [
    {id: nextID++, questID: 4, date: '2020-09-14', confidence: 1, status: 'done'},
    {id: nextID++, questID: 4, date: '2020-09-15', confidence: 1, status: 'done'},
    {id: nextID++, questID: 4, date: '2020-09-16', confidence: 1, status: 'done'},
    {id: nextID++, questID: 4, date: '2020-09-17', confidence: 2, status: 'done'},
    {id: nextID++, questID: 4, date: '2020-09-18', confidence: 2, status: 'planned'},
    {id: nextID++, questID: 4, date: '2020-09-19', confidence: 2, status: 'planned'},
    {id: nextID++, questID: 4, date: '2020-09-20', confidence: 2, status: 'planned'},
]
//–æ–±—î–∫—Ç –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑ —ñ–Ω–≥–ª –Ω–∞ —É–∫—Ä
const statusUKR = {done: '–∑–∞–≤–µ—Ä—à–µ–Ω–æ', ongoing: '—Ç—Ä–∏–≤–∞—î', failed: '–ø—Ä–æ–≤–∞–ª–µ–Ω–æ'}

showActivities()
showQuests()
showConfidence()
// –ø–æ–∫–∞–∑ –¥–∞—Ç–∏ —ñ —á–∞—Å—É —á–µ—Ä–µ–∑ –∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É
setInterval(showDateTime, 1000)
// –≤–∏–∫–æ–Ω—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —â–æ—Ä–∞–∑—É –∫–æ–ª–∏ –¥–æ–¥–∞—î—Ç—å—Å—è –Ω–æ–≤–∞ –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å(activity)
saveNewActivityBtn.onclick = () => {
    saveNewActivity()
    showActivities()
}
// —Ä–æ–±–∏–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–∏—Ö –≤—ñ–∫–æ–Ω
alertGlass.onclick = event => { 
    if (event.target == alertGlass || event.target.innerText == 'ok') {
        alertGlass.hidden = true
    }
}

takeQuestBtn.onclick = () => {
    takeNewQuest()
    showQuests()
    showConfidence()
    showActivities()
}

//////////////////////////////////////////////////////////////////////////////
// –ø–æ–±—É–¥–æ–≤–∞ –µ–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫—É –¥—ñ—è–ª—å–Ω–æ—Å—Ç–µ–π
function buildActivityItem(activity) {
    const ongoing = quests.find(quest => quest.activityID == activity.id && quest.status == 'ongoing')
    return `
        <li>
            <details>
                <summary>
                    <span title="–î—ñ—è–ª—å–Ω—ñ—Å—Ç—å">${activity.name}</span>
                    <span title="–º—ñ—Ä–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è">${activity.size}</span>
                    <span title="—Å—É–±'—î–∫—Ç–∏–≤–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å">${activity.diff}</span>
                </summary>
                <div>
                ${ongoing ? '' :`
                    <button data-id="${activity.id}" data-diff="${activity.diff}">
                        –í–∑—è—Ç–∏ –∫–≤–µ—Å—Ç
                    </button>`}

                    <button>–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
                    <button>üóëÔ∏è</button>
                </div>
            </details>            
        </li>
    `
}
//–ø–æ–±—É–¥–æ–≤–∞ –µ–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫—É –∫–≤–µ—Å—Ç—ñ–≤
function buildQuestItem(quest) {
    const activity = activities.find(activity => activity.id == quest.activityID)    

    return `
        <li>
            <details>
                <summary>
                    <span title="–∫–≤–µ—Å—Ç –Ω–∞ –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å">${activity.name}</span>
                    <span title="–º—ñ—Ä–∞ –∫–æ–∂–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è">${activity.size}</span>
                    <span title="—Å—É–±'—î–∫—Ç–∏–≤–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å">${activity.diff}</span>
                    <span title="–¥–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É">–∑ ${isoToGOST(quest.from)}</span>
                    <span title="–º–æ–∂–ª–∏–≤–∞ –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è">–ø–æ ${isoToGOST(quest.to)}</span>
                    <span><span title="–∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ–∑–∞–¥—É">${quest.done}/</span><span title="–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∫–≤–µ—Å—Ç—É">${quest.total} –¥–Ω—ñ–≤</span></span>
                    <span title="–∑–∞–≤–¥–∞—Ç–æ–∫/–≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—é">${quest.confidence}</span>
                    <span title="—Å—Ç–∞—Ç—É—Å –∫–≤–µ—Å—Ç—É">${statusUKR[quest.status]}</span>
                </summary>
                <div>
                    <button>–î–µ—Ç–∞–ª—ñ</button>
                    <button>–ü—Ä–æ–≤–∞–ª–∏—Ç–∏</button>
                    <button>–í –∞—Ä—Ö—ñ–≤</button>
                </div>
            </details>            
        </li>
    `
}

// –≤–∏–≤—ñ–¥ —Å–ø–∏—Å–∫—É –¥—ñ—è–ª—å–Ω–æ—Å—Ç–µ–π
function showActivities() {
    activityList.innerHTML = activities.map(buildActivityItem).join('')
    activityList.querySelectorAll('details').forEach(element => {
        element.ontoggle = closeOtherDetails
    });
    activityList.querySelectorAll('button').forEach(btn => {
        if (btn.innerText.trim() == '–í–∑—è—Ç–∏ –∫–≤–µ—Å—Ç') {
            btn.onclick = () => {
                if (confidence >= +btn.dataset.diff) showGetQuestModal(btn.dataset.id)
                else showAlert('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≤—ñ—Ä–∏ –≤ —Å–µ–±–µ –Ω–∞ —Ü–µ–π –∫–≤–µ—Å—Ç')
            }
        }
    })
}
// –≤–∏–≤—ñ–¥ —Å–ø–∏—Å–∫—É –∫–≤–µ—Å—Ç—ñ–≤
function showQuests() {
    questList.innerHTML = quests.map(buildQuestItem).join('')
    questList.querySelectorAll('details').forEach(element => {
        element.ontoggle = closeOtherDetails
    });
}
//—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥—ñ—è–ª—å–Ω–æ—Å—Ç–µ–π –∑ —ñ–Ω–ø—É—Ç—ñ–≤
function saveNewActivity() {
    if (nameInput.value && sizeInput.value && diffInput.value) {
        const newActivity = {
            id: nextID++,
            name: nameInput.value, 
            size: sizeInput.value, 
            diff: diffInput.value
        }
        activities.push(newActivity)
        nameInput.value = ''
        sizeInput.value = ''
        diffInput.value = ''
    } else {
        alert ('–ù–µ –≤—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ')
    }
}

// –¥–æ–¥–∞—î—Ç—å—Å—è –Ω–æ–≤–∏–π –∫–≤–µ—Å—Ç, –Ω–æ–≤–∏–π –ø–ª–∞–Ω —ñ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
function takeNewQuest() {
    const newQuest = {
        id: nextID++, 
        activityID: takeQuestBtn.dataset.id, 
        from: questFromInput.value, 
        to: questToInput.value,
        done: 0, 
        total: +questDurationInput.value, 
        confidence: +questPledgeInput.value, 
        status: 'ongoing'
    }
    confidence -= newQuest.confidence
    quests.push(newQuest)
    for (let i = 0; i < newQuest.total; i++) {
        const date = new Date(newQuest.from)
        date.setDate(date.getDate() + i)
        const newTodo = {
            id: nextID++,
            questID: newQuest.id,
            date: dateToISO(date),
            confidence: Math.floor((i+1)**0.5),
            status: 'planned',
        }
        todos.push(newTodo)
    }
    getQuestGlass.hidden = true //–∑–∞–∫—Ä–∏–º–∞—ç–º–æ –º–æ–¥–∞–ª–∫—É  
}

//—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–∞–π–≤–∏—Ö datails
//—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–∫—Ä–∏–≤–∞–Ω–Ω—è –ª–∏—à–Ω—ñ—Ö —Å–ø–æ–π–ª–µ—Ä—ñ–≤, –∫–æ–ª–∏ –Ω–∞—Ç–∏—Å–∫–∞—î–º –Ω–∞ –æ–¥–∏–Ω —ñ–∑ –Ω–∏—Ö
function closeOtherDetails(event) {
    if (closeOtherDetails.active) return 
    closeOtherDetails.active = true //—Ñ–ª–∞–≥ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó

    this.closest('.brick-list').querySelectorAll('[open]').forEach(details => {
        if (details != event.target) details.open = false 
    }) 
    setTimeout(() => closeOtherDetails.active = false, 0)
}

// –≤–∏–≤—ñ–¥ –ø–æ–∫–∞–∑–Ω–∏–∫–∞ –≤—ñ—Ä–∏ –≤ —Å–µ–±–µ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ 
function showConfidence() {
    confidenceView.innerText = confidence
}

// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –¥–∞—Ç–∏ —É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ ISO
function dateToISO(dateObject) {
    const year = dateObject.getFullYear()
    let month = dateObject.getMonth()+1
    if (month < 10) month = '0' + month
    let date = dateObject.getDate()
    if (date < 10) date = '0' + date
    return `${year}-${month}-${date}`
}
// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Å—É –¥–∞—Ç–∏ iso —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–û–°–¢
function isoToGOST(isoDate) {
    const [year, month, date] = isoDate.split('-')
    return `${date}.${month}.${year}`
}
// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø—Ä–æ —â–æ—Å—å
function showAlert(msg) {
    alertMsg.innerText = msg
    alertGlass.hidden = false
}
// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –∞–∫—Ç—É–∞–ª—å–Ω–æ—ó –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É
function showDateTime() {
    dateTimeView.innerHTML = `<div>${getCurrentDate()}</div><h3>${getCurrentTime()}</h3>`
}
// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏
function getCurrentDate() {
    return isoToGOST(dateToISO(new Date))
}
// —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —á–∞—Å—É
function getCurrentTime() {
    const date = new Date
    let hour = date.getHours()
    let minute = date.getMinutes()
    if (hour < 10) hour = '0' + hour
    if (minute < 10) minute = '0' + minute
    return `${hour}:${minute}`
}
